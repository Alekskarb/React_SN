{"ast":null,"code":"var _jsxFileName = \"D:\\\\#1_INcubator\\\\#1_React\\\\new\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { addMessActionCreator, updateMessTextActionCreator } from \"../../Redux/dialogReducer\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.myDia.map(d => React.createElement(DialogItem, {\n    name: d.name,\n    key: d.id,\n    id: d.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n  let messagesElements = state.myMess.map(m => React.createElement(Message, {\n    message: m.message,\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n  let newMessages = state.newMessText;\n\n  let onAddMess = () => {\n    props.addMess();\n  };\n\n  let onMessChange = event => {\n    let body = event.target.value;\n    props.updateMessText(body);\n  };\n\n  if (!props.isAuth) return React.createElement(Redirect, {\n    to: '/login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `${s.dialogsItems} ${s.active}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, dialogsElements), React.createElement(\"div\", {\n    className: s.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, messagesElements), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: onMessChange,\n    placeholder: \"enter message\",\n    value: newMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onAddMess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"add mess\"))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["D:/#1_INcubator/#1_React/new/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","Message","DialogItem","addMessActionCreator","updateMessTextActionCreator","Redirect","Dialogs","props","state","dialogsPage","dialogsElements","myDia","map","d","name","id","messagesElements","myMess","m","message","newMessages","newMessText","onAddMess","addMess","onMessChange","event","body","target","value","updateMessText","isAuth","dialogs","dialogsItems","active","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,oBAAR,EAA8BC,2BAA9B,QAAgE,2BAAhE;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,WAAlB;AAEA,MAAIC,eAAe,GAAGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,IAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,GAAG,EAAED,CAAC,CAACE,EAAjC;AAAqC,IAAA,EAAE,EAAEF,CAAC,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAtB;AACA,MAAIC,gBAAgB,GAAGR,KAAK,CAACS,MAAN,CAAaL,GAAb,CAAkBM,CAAD,IAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,GAAG,EAAED,CAAC,CAACH,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAvB;AACA,MAAIK,WAAW,GAAGZ,KAAK,CAACa,WAAxB;;AAEA,MAAIC,SAAS,GAAG,MAAM;AAClBf,IAAAA,KAAK,CAACgB,OAAN;AACH,GAFD;;AAID,MAAIC,YAAY,GAAIC,KAAD,IAAW;AACzB,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACArB,IAAAA,KAAK,CAACsB,cAAN,CAAqBH,IAArB;AACH,GAHF;;AAKH,MAAI,CAACnB,KAAK,CAACuB,MAAX,EAAmB,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEf,SACI;AAAK,IAAA,SAAS,EAAE9B,CAAC,CAAC+B,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,GAAE/B,CAAC,CAACgC,YAAa,IAAGhC,CAAC,CAACiC,MAAO,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,eADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAEV,CAAC,CAACkC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlB,gBAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,QAAQ,EAAEQ,YAApB;AACU,IAAA,WAAW,EAAC,eADtB;AACsC,IAAA,KAAK,EAAEJ,WAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CANJ,CAJJ,CADJ;AAiBH,CApCD;;AAsCA,eAAehB,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessActionCreator, updateMessTextActionCreator} from \"../../Redux/dialogReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.myDia.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.myMess.map((m) => <Message message={m.message} key={m.id}/>);\r\n    let newMessages = state.newMessText;\r\n\r\n    let onAddMess = () => {\r\n        props.addMess();\r\n    }\r\n\r\n   let onMessChange = (event) => {\r\n        let body = event.target.value;\r\n        props.updateMessText(body);\r\n    };\r\n\r\nif (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItems} ${s.active}`}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <textarea onChange={onMessChange}\r\n                              placeholder='enter message' value={newMessages}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddMess}>add mess</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}