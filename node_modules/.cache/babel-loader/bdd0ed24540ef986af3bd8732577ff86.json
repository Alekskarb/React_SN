{"ast":null,"code":"import React from'react';import{addMessActionCreator,updateMessTextActionCreator}from\"../../Redux/dialogReducer\";import Dialogs from\"./Dialogs\";import{connect}from\"react-redux\";import{withAuthRedirect}from\"../../hoc/withAuthRedirect\";import{compose}from\"redux\";var mapStateToProps=function mapStateToProps(state){return{dialogsPage:state.dialogsPage};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMess:function addMess(){dispatch(addMessActionCreator());},updateMessText:function updateMessText(event){dispatch(updateMessTextActionCreator(event));}};};export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["D:/React_SN/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","addMessActionCreator","updateMessTextActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","addMess","updateMessText","event"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,oBAAR,CAA8BC,2BAA9B,KAAgE,2BAAhE,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,4BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAEA,GAAIC,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,CAACC,KAAD,CAAW,CAC5B,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WADhB,CAAP,CAEE,CAHN,CAKA,GAAIC,CAAAA,kBAAkB,CAAE,QAApBA,CAAAA,kBAAoB,CAACC,QAAD,CAAc,CAClC,MAAO,CAACC,OAAO,CAAE,kBAAK,CAAED,QAAQ,CAACV,oBAAoB,EAArB,CAAR,CAAiC,CAAlD,CACHY,cAAc,CAAE,wBAACC,KAAD,CAAU,CAAEH,QAAQ,CAACT,2BAA2B,CAACY,KAAD,CAA5B,CAAR,CAC/B,CAFM,CAAP,CAGE,CAJN,CAOA,cAAeR,CAAAA,OAAO,CACdF,OAAO,CAACG,eAAD,CAAkBG,kBAAlB,CADO,CAEdL,gBAFc,CAAP,CAIVF,OAJU,CAAf","sourcesContent":["import React from 'react';\r\nimport {addMessActionCreator, updateMessTextActionCreator} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps =(state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }};\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return {addMess: ()=> { dispatch(addMessActionCreator())},\r\n        updateMessText: (event)=> { dispatch(updateMessTextActionCreator(event))\r\n    }\r\n    }}\r\n\r\n\r\nexport default compose(\r\n        connect(mapStateToProps, mapDispatchToProps),\r\n        withAuthRedirect,\r\n    )\r\n    (Dialogs)"]},"metadata":{},"sourceType":"module"}