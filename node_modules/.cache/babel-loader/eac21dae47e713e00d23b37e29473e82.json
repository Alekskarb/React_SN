{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import Message from\"./Message/Message\";import DialogItem from\"./DialogItem/DialogItem\";import{addMessActionCreator,updateMessTextActionCreator}from\"../../Redux/dialogReducer\";import{Redirect}from\"react-router-dom\";var Dialogs=function Dialogs(props){var state=props.dialogsPage;var dialogsElements=state.myDia.map(function(d){return React.createElement(DialogItem,{name:d.name,key:d.id,id:d.id});});var messagesElements=state.myMess.map(function(m){return React.createElement(Message,{message:m.message,key:m.id});});var newMessages=state.newMessText;var onAddMess=function onAddMess(){props.addMess();};var onMessChange=function onMessChange(event){var body=event.target.value;props.updateMessText(body);};if(!props.isAuth)return React.createElement(Redirect,{to:'/login'});return React.createElement(\"div\",{className:s.dialogs},React.createElement(\"div\",{className:\"\".concat(s.dialogsItems,\" \").concat(s.active)},dialogsElements),React.createElement(\"div\",{className:s.messages},React.createElement(\"div\",null,messagesElements),React.createElement(\"div\",null,React.createElement(\"textarea\",{onChange:onMessChange,placeholder:\"enter message\",value:newMessages})),React.createElement(\"div\",null,React.createElement(\"button\",{onClick:onAddMess},\"add mess\"))));};export default Dialogs;","map":{"version":3,"sources":["D:/React_SN/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","Message","DialogItem","addMessActionCreator","updateMessTextActionCreator","Redirect","Dialogs","props","state","dialogsPage","dialogsElements","myDia","map","d","name","id","messagesElements","myMess","m","message","newMessages","newMessText","onAddMess","addMess","onMessChange","event","body","target","value","updateMessText","isAuth","dialogs","dialogsItems","active","messages"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAAQC,oBAAR,CAA8BC,2BAA9B,KAAgE,2BAAhE,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAEvB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,WAAlB,CAEA,GAAIC,CAAAA,eAAe,CAAGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,SAACC,CAAD,QAAO,qBAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAA0B,GAAG,CAAED,CAAC,CAACE,EAAjC,CAAqC,EAAE,CAAEF,CAAC,CAACE,EAA3C,EAAP,EAAhB,CAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAGR,KAAK,CAACS,MAAN,CAAaL,GAAb,CAAiB,SAACM,CAAD,QAAO,qBAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,CAA6B,GAAG,CAAED,CAAC,CAACH,EAApC,EAAP,EAAjB,CAAvB,CACA,GAAIK,CAAAA,WAAW,CAAGZ,KAAK,CAACa,WAAxB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAClBf,KAAK,CAACgB,OAAN,GACH,CAFD,CAID,GAAIC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACzB,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB,CACArB,KAAK,CAACsB,cAAN,CAAqBH,IAArB,EACH,CAHF,CAKH,GAAI,CAACnB,KAAK,CAACuB,MAAX,CAAmB,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAEf,MACI,4BAAK,SAAS,CAAE9B,CAAC,CAAC+B,OAAlB,EACI,2BAAK,SAAS,WAAK/B,CAAC,CAACgC,YAAP,aAAuBhC,CAAC,CAACiC,MAAzB,CAAd,EACKvB,eADL,CADJ,CAII,2BAAK,SAAS,CAAEV,CAAC,CAACkC,QAAlB,EACI,+BAAMlB,gBAAN,CADJ,CAEI,+BACI,gCAAU,QAAQ,CAAEQ,YAApB,CACU,WAAW,CAAC,eADtB,CACsC,KAAK,CAAEJ,WAD7C,EADJ,CAFJ,CAMI,+BACI,8BAAQ,OAAO,CAAEE,SAAjB,aADJ,CANJ,CAJJ,CADJ,CAiBH,CApCD,CAsCA,cAAehB,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessActionCreator, updateMessTextActionCreator} from \"../../Redux/dialogReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.myDia.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.myMess.map((m) => <Message message={m.message} key={m.id}/>);\r\n    let newMessages = state.newMessText;\r\n\r\n    let onAddMess = () => {\r\n        props.addMess();\r\n    }\r\n\r\n   let onMessChange = (event) => {\r\n        let body = event.target.value;\r\n        props.updateMessText(body);\r\n    };\r\n\r\nif (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItems} ${s.active}`}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <textarea onChange={onMessChange}\r\n                              placeholder='enter message' value={newMessages}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddMess}>add mess</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}