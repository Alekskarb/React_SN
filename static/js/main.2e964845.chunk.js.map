{"version":3,"sources":["assets/images/images.png","assets/load.gif","components/Profile/MyPosts/Posts/Post.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","Redux/dialogReducer.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/common/FormsControl/FormsControl.jsx","components/utilites/validators/validators.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","Redux/usersReducer.jsx","components/Users/Users.jsx","components/common/preloader.jsx","Redux/usersSelectors.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profileReducer.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/authReducer.jsx","components/Header/HeaderContainer.jsx","Login.jsx","Redux/appReducer.jsx","App.jsx","Redux/sidebarReducer.jsx","Redux/redux-store.jsx","index.js","components/common/FormsControl/FormsControl.module.css","components/Users/users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","userId","useSelector","state","auth","className","s","nav","item","to","activeClassName","active","initialState","myDia","id","name","myMess","message","dialogReducer","action","type","mess","newMessages","Message","props","dialog","DialogItem","path","alt","src","FormControl","input","meta","child","hasError","touched","error","formControl","children","InputArea","restProps","TextArea","requiredFields","value","maxLengthTC","maxLength","length","maxLength20","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","Dialogs","dialogsPage","dialogsElements","map","d","key","messagesElements","m","isAuth","dialogs","dialogsItems","messages","e","addMess","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","addMessActionCreator","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","delete","post","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingProgress","setCurrentPage","setFetching","setFollowingProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","page","index","styles","boldPage","onClick","onPageChanged","photos","small","userPict","userFoto","disabled","some","unfollow","follow","Preloader","loader","getUsersSuperSelect","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowingProgress","UsersContainer","pageNumber","getUsers","resultCode","followSuccess","unfollowSuccess","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","onChange","currentTarget","autoFocus","ProfileInfo","profile","content","descriptionBlock","large","myPost","likesCount","newPostText","profileReducer","newPost","postFormMess","Post","maxLength10","ReduxPostForm","MyPosts","postsElements","p","postsBlock","onAddPost","posts","profilesPage","addPostActionCreator","Profile","PostContainer","ProfileContainer","match","params","authUserId","history","getUserProfile","getUserStatus","withRouter","Header","header","loginBlock","login","logout","setAuthUserData","payload","getAuthorize","authReducer","HeaderContainer","ReduxLoginForm","style","formSumError","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","dispatchResult","Promise","all","speakers","nik","speaks","sidebarReducer","reducers","combineReducers","sideBar","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e964845.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/images.06ece216.png\";","module.exports = __webpack_public_path__ + \"static/media/load.26ef8bb4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yagv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1YyKp\",\"dialogsItems\":\"Dialogs_dialogsItems__1Yf3L\",\"active\":\"Dialogs_active__gq_Rd\",\"messages\":\"Dialogs_messages__1We-l\",\"item\":\"Dialogs_item__3EO79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13ZGC\",\"item\":\"Navbar_item__3oUgG\",\"active\":\"Navbar_active__1g11l\",\"friendsContainer\":\"Navbar_friendsContainer__2Rreh\",\"friend\":\"Navbar_friend__3-gGi\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const {userId} = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={`/profile/${userId}`} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/users\">USERS</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h2>Friends</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navbar;","let ADD_MESS = 'ADD-MESS';\r\n\r\nlet initialState = {\r\n    myDia: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Tanya'},\r\n        {id: 3, name: 'Pasha'},\r\n        {id: 4, name: 'Illya'}],\r\n    myMess: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Im Ok'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'OK'}],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            let mess = action.newMessages;\r\n            return {\r\n                ...state, myMess: [...state.myMess, {id: 5, message: mess}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessActionCreator = (newMessages) => ({type: ADD_MESS, newMessages});\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.active + ' ' + s.item}>\r\n            <img alt={'simple icon'}\r\n                src='https://avatars.githubusercontent.com/u/53193249?s=100'/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './FormsControl.module.css';\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error: '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const InputArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};","import React from 'react';\n\nexport const requiredFields = (value)=> {\n    if (value) {return undefined;\n    } else {return 'Field is required'}\n};\n\n\nexport const maxLengthTC = (maxLength)=> (value)=> {\n     if (value.length > maxLength) {return `max length is ${maxLength} sign`;\n    } else {return undefined}\n};","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthTC, requiredFields} from \"../utilites/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.myDia.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.myMess.map((m) => <Message message={m.message} key={m.id}/>);\r\n\r\n    let onAddMess = (e) => {\r\n       // alert(e.newMessages);\r\n        props.addMess(e.newMessages);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItems} ${s.active}`}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <ReduxDialogsForm onSubmit={onAddMess}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet maxLength20 =maxLengthTC(20);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder='your message'\r\n                   name={'newMessages'}\r\n                   component={TextArea}\r\n                   validate={[requiredFields, maxLength20]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>add mess</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ReduxDialogsForm =reduxForm({form: 'reduxDialogsForm'})(DialogsForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect =(Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import React from 'react';\r\nimport {addMessActionCreator} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMess: (newMessages) => {\r\n            dispatch(addMessActionCreator(newMessages))\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,)(Dialogs)","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '3eb442be-c6ec-48c8-96fc-69807a29300c'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Use profileAPI');\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authorize() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post('auth/login',\r\n            {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    },\r\n};\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(setFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            })\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            })\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React from 'react';\nimport styles from './users.module.css'\nimport userPict from '../../assets/images/images.png'\nimport {NavLink} from \"react-router-dom\";\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return <div>\n        <div>\n            {pages.map(page => {\n                return (\n                    <span key={page.index} className={props.currentPage === page && styles.boldPage}\n                          onClick={() => {\n                              props.onPageChanged(page)\n                          }}>{page}\n                    </span>\n                )\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : userPict} className={styles.userFoto}\n                         alt={'unload'}/>\n                    </NavLink>\n                </div>\n                <div>\n{u.followed\n    ? <button disabled={props.followingProgress.some(id => id === u.id)}\n              onClick={() => {\n                  props.unfollow(u.id)\n              }}>\n        unfollow\n    </button>\n\n    : <button disabled={props.followingProgress.some(id => id === u.id)}\n              onClick={() => {\n                  props.follow(u.id)\n              }}>\n        follow\n    </button>}\n            </div>\n            </span>\n                <span>\n                <span>\n    <div>{u.name}</div>\n    <div>{u.status}</div>\n</span>\n            <span>\n                  {/*<div>{'u.location.country'}</div>*/}\n                  {/*  <div>{'u.location.city'}</div>*/}\n                </span>\n                </span>\n            </div>)\n        }\n    </div>\n};\n\nexport default Users;","import React from 'react';\r\nimport loader from \"../../assets/load.gif\";\r\n\r\nconst Preloader = (props) => {\r\n  return <div>\r\n  <img src={loader} alt={'preload'}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getUsersSuperSelect = createSelector(getUsers,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n};\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 22;\r\n    return count;\r\n};","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {follow, getUsers, setCurrentPage, setFollowingProgress, unfollow} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFetching,\n    getFollowingProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSuperSelect\n} from \"../../Redux/usersSelectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    };\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   setFollowingProgress={this.props.setFollowingProgress}\n                   followingProgress={this.props.followingProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // users: getSelectUsers(state),\n        users: getUsersSuperSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingProgress: getFollowingProgress(state),\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, setFollowingProgress, getUsers\n    }),\n    withAuthRedirect,)(UsersContainer)\n\n\n","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activatedMode = () => {\r\n        this.setState({editMode: true});\r\n    };\r\n\r\n    deactivatedMode = () => {\r\n        this.setState({editMode: false});\r\n        this.props.updateUserStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value});\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activatedMode}> {this.props.status || ')))))'} </span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onBlur={this.deactivatedMode}\r\n                           value={this.state.status}\r\n                           onChange={this.onStatusChange}\r\n                           autoFocus={true}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivatedMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activatedMode}> {props.status || 'glad to see you'} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivatedMode}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                       autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.content}>\r\n                <img\r\n                    src='https://cdn.pixabay.com/photo/2015/01/08/19/10/jetty-593401_960_720.jpg' alt={'no_image'}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={props.status}\r\n                               updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nlet ADD_POST = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    myPost: [{id: 1, message: 'What is your name?', likesCount: 0},\r\n        {id: 2, message: 'My Name is Pawel', likesCount: 456368},\r\n        {id: 3, message: 'My Name is Sanek', likesCount: 34},\r\n        {id: 4, message: 'Very well', likesCount: 45}],\r\n    newPostText: 'samuray',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postFormMess,\r\n                likesCount: 44\r\n            };\r\n            return {\r\n                ...state,\r\n                myPost: [...state.myPost, newPost],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (postFormMess) => ({type: ADD_POST, postFormMess});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    })\r\n};\r\n\r\nexport const getUserStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data));\r\n    })\r\n};\r\nexport const updateUserStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    })\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div  className={s.item}>\r\n             <img src='https://cdn.pixabay.com/photo/2016/09/22/16/38/avatar-1687700_960_720.jpg' alt={'avatar'}/>\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount} like</span>\r\n              </div>\r\n                </div>              \r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthTC, requiredFields} from \"../../utilites/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.myPost.map((p) => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n    let addPost = (e) => {\r\n        props.onAddPost(e.postFormMess);\r\n    };\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n            <ReduxPostForm onSubmit={addPost}/>\r\n            {/*<textarea onChange={onPostChange} value={newPostTexts}/>*/}\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\nconst maxLength10 = maxLengthTC(10);\r\n\r\nconst PostForm = (props)=> {\r\n  return <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field placeholder={'add post'} name={'postFormMess'}\r\n                     component={TextArea}\r\n              validate={[requiredFields, maxLength10]}\r\n              />\r\n              <div>\r\n                  <button> ADD post </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n  </div>\r\n};\r\nconst ReduxPostForm = reduxForm({form: 'reduxPostForm'})(PostForm);\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPost: state.profilesPage.myPost,\r\n        newPostText: state.profilesPage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (postFormMess) => {\r\n            dispatch(addPostActionCreator(postFormMess))\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostContainer from \"./MyPosts/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <PostContainer\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilesPage.profile,\r\n    status: state.profilesPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n    )(ProfileContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from'./Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return <header className={s.header}>\r\n    <img src='https://static.techspot.com/images2/news/bigimage/2019/01/2019-01-14-image-6.jpg'\r\n    alt={'photos'}\r\n    />\r\n\r\n    <div className={s.loginBlock}>\r\n      {props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}> Log Out </button> </div>\r\n      :<NavLink to={'/login'}> LOGIN </NavLink>}\r\n    </div>\r\n\r\n</header>\r\n};\r\n\r\nexport default Header; ","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthorize = () => (dispatch) => {\r\n    authAPI.authorize()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        });\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthorize())\r\n                        }\r\n            else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        });\r\n};\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null,null,null, false))\r\n            }\r\n        });\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout\r\n    })(HeaderContainer);","import React from 'react';\nimport './App.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {InputArea} from \"./components/common/FormsControl/FormsControl\";\nimport {requiredFields} from \"./components/utilites/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./Redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./components/common/FormsControl/FormsControl.module.css\";\n\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field  validate={[requiredFields]} type={'email'}\n                       name={'email'} component={InputArea} value='22222'/>\n                       Please, enter: free@samuraijs.com\n            </div>\n            <div>\n                 <Field  validate={[requiredFields]} type={'password'} value={'ddddd'}\n                       name={'password'} component={InputArea} />\n                Please, enter:  free\n            </div>\n            <div>\n                <Field type={'checkbox'} validate={[requiredFields]}\n                       name={'rememberMe'} component={InputArea}/>\n                remember me\n            </div>\n            {props.error && <div className={style.formSumError}>\n                {props.error}\n            </div>}\n            <div>\n                <button> login </button>\n            </div>\n        </form>\n    )\n};\n\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to ={'/profile'}/>\n    }\n\n    return <div>\n        <h2> LOGIN </h2>\n        <ReduxLoginForm onSubmit={onSubmit}/>\n    </div>\n};\n\nlet mapStateToProps = (state)=> {\n return { isAuth: state.auth.isAuth}\n};\n\nexport default connect(mapStateToProps, {login})(Login)\n\n","import {getAuthorize} from \"./authReducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    //promise\r\n   let dispatchResult = dispatch(getAuthorize());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>\r\n        dispatch(initializedSuccess()));\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\nif (!this.props.initialized ) {\n   return <Preloader/>\n}\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => (\n    {\n        initialized: state.app.initialized\n    }\n);\n\nexport default compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);","\r\nlet initialState= {\r\n    speakers: [\r\n        {id: 1, nik: 'Dev'},\r\n        {id: 2, nik: 'Jun'},\r\n        {id: 3, nik: 'HR'},\r\n        {id: 4, nik: 'PM'}],\r\n        speaks: [\r\n        {id: 1, speaks: 'Very good'},\r\n        {id: 2, speaks: 'Good Idea'},\r\n        {id: 3, speaks: 'some Bitch'},\r\n        {id: 4, speaks: 'Real guy'}]\r\n};\r\n\r\nconst sidebarReducer = (state=initialState)=> {\r\n    return state;  };\r\n\r\n    export default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilesPage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n        </Provider>\n        </BrowserRouter>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__1H5nd\",\"formControl\":\"FormsControl_formControl__1lnyu\",\"error\":\"FormsControl_error__15huM\",\"formSumError\":\"FormsControl_formSumError__2iufC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"users_userFoto__1UyBp\",\"boldPage\":\"users_boldPage__297ml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2B-5Z\",\"content\":\"ProfileInfo_content__3SdjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l0Dt\",\"posts\":\"MyPosts_posts__2J8SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Gah8\",\"loginBlock\":\"Header_loginBlock__2dYpU\"};"],"sourceRoot":""}