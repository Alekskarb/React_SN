{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/background.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","assets/images/persons.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","value","onChange","e","currentTarget","autoFocus","ProfileReduxDataForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSumError","buildField","InputArea","type","TextArea","Object","keys","contacts","map","key","s","ProfileData","isOwner","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","title","Contacts","ProfileInfo","saveAvatar","saveProfile","descriptionBlock","src","photos","large","userPict","alt","content","target","files","length","initialValues","formData","a","async","then","Post","item","person","message","likesCount","maxLength10","maxLengthTC","ReduxPostForm","Field","placeholder","name","component","validate","requiredFields","MyPosts","React","memo","postsElements","myPost","p","id","postsBlock","onAddPost","postFormMess","posts","connect","state","profilesPage","newPostText","dispatch","addPostActionCreator","Profile","PostContainer","ProfileContainer","reLoadProfileAvatar","userId","match","params","authUserId","history","push","getUserProfile","getUserStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0752dc47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2B-5Z\",\"content\":\"ProfileInfo_content__3SdjH\",\"contacts\":\"ProfileInfo_contacts__17wH8\"};","module.exports = __webpack_public_path__ + \"static/media/background.09b67605.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l0Dt\",\"posts\":\"MyPosts_posts__2J8SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yagv\"};","module.exports = __webpack_public_path__ + \"static/media/persons.6441fd5d.png\";","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivatedMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n            <b> Status: </b> <span onDoubleClick={activatedMode}> {props.status || 'glad to see you, wo/men)'} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivatedMode}\r\n                    value={status}\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {buildField, InputArea, TextArea} from \"../../common/FormsControl/FormsControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControl/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button> save profile </button></div>\r\n        {error && <div className={style.formSumError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b> Full Name: </b> {buildField('Full Name', 'fullName', [], InputArea)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {buildField('', 'LookingForAJob', [], InputArea, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b> My professional skills: </b>\r\n            {buildField('My professional skills', 'lookingForAJobDescription', [], TextArea)}\r\n        </div>\r\n\r\n        <div><b>About Me: </b> </div>\r\n        {buildField('About Me', 'aboutMe', [], TextArea)}\r\n        <div>\r\n            <b> CONTACTS: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contacts}>\r\n                <b>{key}: {buildField(key, 'contacts.' + key, [], InputArea)}\r\n                </b>\r\n                </div>\r\n\r\n        })}\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileReduxDataForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileReduxDataForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPict from '../../../assets/images/background.jpg'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, saveAvatar, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = async (formData)=> {\r\n       saveProfile(formData).then(\r\n           ()=>{ setEditMode(false)}\r\n       );\r\n\r\n    };\r\n\r\n    const onFileLoad = (e) => {\r\n        if (e.target.files.length) {\r\n            saveAvatar(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPict} alt=\"no_image\" className={s.content}/>\r\n                {isOwner && <input type={\"file\"} onChange={onFileLoad}/>}\r\n                {editMode ? <ProfileDataForm profile={profile}\r\n                                             initialValues={profile}\r\n                                             onSubmit={onSubmit}\r\n                                             saveProfile={saveProfile}/>\r\n                    : <ProfileData profile={profile}\r\n                                   editMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}\r\n                                   isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, editMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={editMode}> edit profile</button>\r\n        </div>}\r\n        <div><b> Full Name: </b>\r\n            {profile.fullName}\r\n        </div>\r\n        <div><b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'} </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b> My professional skills: </b> {profile.lookingForAJobDescription} </div>\r\n        }\r\n        <div><b>About Me: </b>{profile.aboutMe} </div>\r\n        <div><b> CONTACTS: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} title={key} value={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n\r\n};\r\n\r\nconst Contacts = ({title, value}) => {\r\n    return <div className={s.contacts}><b> {title}: </b> {value} </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport person from '../../../../assets/images/persons.png'\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div  className={s.item}>\r\n             <img src={person} alt={'avatar'}/>\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount} like</span>\r\n              </div>\r\n                </div>              \r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthTC, requiredFields} from \"../../utilites/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst maxLength10 = maxLengthTC(10);\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'add post'} name={'postFormMess'}\r\n                   component={TextArea}\r\n                   validate={[requiredFields, maxLength10]}\r\n            />\r\n            <div>\r\n                <button> ADD post</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n};\r\nconst ReduxPostForm = reduxForm({form: 'reduxPostForm'})(PostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // checks extra renders\r\n\r\n    // componentDidMount() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({a:12})\r\n    //     }, 1000);\r\n    // }\r\n\r\n//use 1 PureComponent instead of React.Component // class Component\r\n//use 2 shouldComponentUpdate = React.Component // class Component\r\n//use 2 React.Memo with functional Component //\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // }\r\n\r\n    let postsElements = props.myPost.map((p) => <Post message={p.message} key={p.id}\r\n                                                      likesCount={p.likesCount}/>);\r\n    let addPost = (e) => {\r\n        props.onAddPost(e.postFormMess);\r\n    };\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n            <ReduxPostForm onSubmit={addPost}/>\r\n            {/*<textarea onChange={onPostChange} value={newPostTexts}/>*/}\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPost: state.profilesPage.myPost,\r\n        newPostText: state.profilesPage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (postFormMess) => {\r\n            dispatch(addPostActionCreator(postFormMess))\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostContainer from \"./MyPosts/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         saveAvatar={props.saveAvatar}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <PostContainer\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, saveAvatar, saveProfile, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    reLoadProfileAvatar = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.reLoadProfileAvatar()\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.reLoadProfileAvatar()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     isOwner = {!!this.props.match.params.userId}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     saveAvatar = {this.props.saveAvatar}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilesPage.profile,\r\n    status: state.profilesPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveAvatar, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}