{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/background.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","assets/images/persons.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","value","onChange","e","currentTarget","autoFocus","ProfileData","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","title","Contacts","className","s","ProfileInfo","isOwner","saveAvatar","descriptionBlock","src","photos","large","userPict","alt","content","type","target","files","length","Post","item","person","message","likesCount","maxLength10","maxLengthTC","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","TextArea","validate","requiredFields","MyPosts","React","memo","postsElements","myPost","p","id","postsBlock","onAddPost","postFormMess","posts","connect","state","profilesPage","newPostText","dispatch","addPostActionCreator","Profile","PostContainer","ProfileContainer","reLoadProfileAvatar","userId","match","params","authUserId","history","push","getUserProfile","getUserStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c6718dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2B-5Z\",\"content\":\"ProfileInfo_content__3SdjH\",\"contacts\":\"ProfileInfo_contacts__17wH8\"};","module.exports = __webpack_public_path__ + \"static/media/background.09b67605.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l0Dt\",\"posts\":\"MyPosts_posts__2J8SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yagv\"};","module.exports = __webpack_public_path__ + \"static/media/persons.6441fd5d.png\";","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivatedMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n            <b> Status: </b> <span onDoubleClick={activatedMode}> {props.status || 'glad to see you, wo/men)'} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivatedMode}\r\n                    value={status}\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPict from '../../../assets/images/background.jpg'\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, saveAvatar}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onFileLoad = (e) => {\r\n        if (e.target.files.length) {\r\n            saveAvatar(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPict} alt=\"no_image\" className={s.content}/>\r\n                {isOwner && <input type={\"file\"} onChange={onFileLoad}/>}\r\n                <ProfileData profile={profile}/>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return <div>\r\n        <div><b>Full Name: </b>\r\n            {profile.fullName}\r\n        </div>\r\n        <div><b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'} </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b> My professional skills: </b> {profile.lookingForAJobDescription} </div>\r\n        }\r\n        <div><b>About Me: </b>{profile.aboutMe} </div>\r\n        <div><b> CONTACTS: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} title={key} value={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n\r\n};\r\n\r\nconst Contacts = ({title, value}) => {\r\n    return <div className={s.contacts}><b> {title}: </b> {value} </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport person from '../../../../assets/images/persons.png'\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div  className={s.item}>\r\n             <img src={person} alt={'avatar'}/>\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount} like</span>\r\n              </div>\r\n                </div>              \r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthTC, requiredFields} from \"../../utilites/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst maxLength10 = maxLengthTC(10);\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'add post'} name={'postFormMess'}\r\n                   component={TextArea}\r\n                   validate={[requiredFields, maxLength10]}\r\n            />\r\n            <div>\r\n                <button> ADD post</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n};\r\nconst ReduxPostForm = reduxForm({form: 'reduxPostForm'})(PostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // checks extra renders\r\n\r\n    // componentDidMount() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({a:12})\r\n    //     }, 1000);\r\n    // }\r\n\r\n//use 1 PureComponent instead of React.Component // class Component\r\n//use 2 shouldComponentUpdate = React.Component // class Component\r\n//use 2 React.Memo with functional Component //\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // }\r\n\r\n    let postsElements = props.myPost.map((p) => <Post message={p.message} key={p.id}\r\n                                                      likesCount={p.likesCount}/>);\r\n    let addPost = (e) => {\r\n        props.onAddPost(e.postFormMess);\r\n    };\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n            <ReduxPostForm onSubmit={addPost}/>\r\n            {/*<textarea onChange={onPostChange} value={newPostTexts}/>*/}\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPost: state.profilesPage.myPost,\r\n        newPostText: state.profilesPage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (postFormMess) => {\r\n            dispatch(addPostActionCreator(postFormMess))\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostContainer from \"./MyPosts/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         saveAvatar={props.saveAvatar}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <PostContainer\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, saveAvatar, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    reLoadProfileAvatar = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.reLoadProfileAvatar()\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.reLoadProfileAvatar()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     isOwner = {!!this.props.match.params.userId}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     saveAvatar = {this.props.saveAvatar}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilesPage.profile,\r\n    status: state.profilesPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveAvatar}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}