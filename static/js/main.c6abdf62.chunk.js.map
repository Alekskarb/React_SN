{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","assets/images/images.png","assets/load.gif","components/Profile/MyPosts/Posts/Post.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","Redux/dialogReducer.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","Redux/usersReducer.jsx","components/Users/Users.jsx","components/common/preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profileReducer.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","Redux/authReducer.jsx","components/Header/HeaderContainer.jsx","Login.jsx","App.jsx","Redux/sidebarReducer.jsx","Redux/redux-store.jsx","index.js"],"names":["module","exports","Header","props","className","s","header","src","loginBlock","isAuth","login","to","Navbar","nav","item","activeClassName","active","initialState","myDia","id","name","myMess","message","newMessText","dialogReducer","state","action","type","mess","messPost","Message","dialog","DialogItem","path","Dialogs","dialogsPage","dialogsElements","map","d","key","messagesElements","m","newMessages","dialogs","dialogsItems","messages","onChange","event","body","target","value","updateMessText","placeholder","onClick","addMess","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","delete","post","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","users","totalUsersCount","isFetching","followingProgress","setFetching","setFollowingProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","page","styles","boldPage","onPageChanged","photos","small","userPict","userFoto","disabled","some","unfollow","follow","Preloader","loader","UsersContainer","pageNumber","getUsers","usersPage","resultCode","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","ProfileStatus","editMode","activatedMode","setState","deactivatedMode","updateUserStatus","onStatusChange","e","currentTarget","onDoubleClick","onBlur","autoFocus","ProfileInfo","profile","content","descriptionBlock","large","alt","myPost","likesCount","newPostText","setStatus","profileReducer","newPost","newText","Post","MyPosts","postsElements","p","newPostTexts","postsBlock","text","updatePostText","onAddPost","posts","PostContainer","profilesPage","Profile","ProfileContainer","match","params","getUserProfile","getUserStatus","withRouter","email","authReducer","HeaderContainer","getAuthorize","setAuthUserData","Login","App","render","DialogsContainer","speakers","nik","speaks","sidebarReducer","reducers","combineReducers","sideBar","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c6abdf62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13ZGC\",\"item\":\"Navbar_item__3oUgG\",\"active\":\"Navbar_active__1g11l\",\"friendsContainer\":\"Navbar_friendsContainer__2Rreh\",\"friend\":\"Navbar_friend__3-gGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1YyKp\",\"dialogsItems\":\"Dialogs_dialogsItems__1Yf3L\",\"active\":\"Dialogs_active__gq_Rd\",\"messages\":\"Dialogs_messages__1We-l\",\"item\":\"Dialogs_item__3EO79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2B-5Z\",\"content\":\"ProfileInfo_content__3SdjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Gah8\",\"loginBlock\":\"Header_loginBlock__2dYpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"users_userFoto__1UyBp\",\"boldPage\":\"users_boldPage__297ml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l0Dt\",\"posts\":\"MyPosts_posts__2J8SG\"};","module.exports = __webpack_public_path__ + \"static/media/images.06ece216.png\";","module.exports = __webpack_public_path__ + \"static/media/load.26ef8bb4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yagv\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from'./Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return <header className={s.header}>\r\n    <img src='https://static.techspot.com/images2/news/bigimage/2019/01/2019-01-14-image-6.jpg'/>\r\n\r\n    <div className={s.loginBlock}>\r\n      {props.isAuth? props.login\r\n      :<NavLink to={'/login'}> LOGIN </NavLink>}\r\n    </div>\r\n\r\n</header>\r\n};\r\n\r\nexport default Header; ","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return   (<>\r\n\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/users\">USERS</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h2>Friends</h2>\r\n                    {/*<Sidebar nik={props.state.speakers}/>*/}\r\n                </div>\r\n            </div>\r\n    </>)\r\n};\r\n\r\nexport default Navbar;","let ADD_MESS = 'ADD-MESS';\r\nlet UPDATE_MESS_TEXT = 'UPDATE-MESS-TEXT';\r\n\r\nlet initialState = {\r\n    myDia: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Tanya'},\r\n        {id: 3, name: 'Pasha'},\r\n        {id: 4, name: 'Illya'}],\r\n    myMess: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Im Ok'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'OK'}],\r\n    newMessText: 'All right'\r\n}\r\n\r\nconst dialogReducer = (state=initialState, action)=> {\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            let mess =state.newMessText;\r\n            return {\r\n                ...state, newMessText: '', myMess: [...state.myMess, {id: 5, message: mess}], };\r\n        case UPDATE_MESS_TEXT:\r\n            return {\r\n            ...state, newMessText: action.messPost};\r\n            default:  return state;\r\n    }\r\n}\r\n\r\nexport const addMessActionCreator =()=> ({type: ADD_MESS});\r\nexport const updateMessTextActionCreator =(mess)=> ({type: UPDATE_MESS_TEXT, messPost: mess});\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.active + ' ' + s.item}>\r\n            <img src='https://scontent-frx5-1.cdninstagram.com/vp/a5bbd3423e3bb82ae01a25db07fa16c8/5E0914B0/t51.2885-19/s150x150/19052178_158575998016889_3547556210976751616_a.jpg?_nc_ht=scontent-frx5-1.cdninstagram.com'/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n            {/*{props.message}*/}\r\n            {/*<div>*/}\r\n            {/*    <span></span>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessActionCreator, updateMessTextActionCreator} from \"../../Redux/dialogReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.myDia.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.myMess.map((m) => <Message message={m.message} key={m.id}/>);\r\n    let newMessages = state.newMessText;\r\n\r\n    let onAddMess = () => {\r\n        props.addMess();\r\n    }\r\n\r\n   let onMessChange = (event) => {\r\n        let body = event.target.value;\r\n        props.updateMessText(body);\r\n    };\r\n\r\nif (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItems} ${s.active}`}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <textarea onChange={onMessChange}\r\n                              placeholder='enter message' value={newMessages}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddMess}>add mess</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect =(Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import React from 'react';\r\nimport {addMessActionCreator, updateMessTextActionCreator} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps =(state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }};\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return {addMess: ()=> { dispatch(addMessActionCreator())},\r\n        updateMessText: (event)=> { dispatch(updateMessTextActionCreator(event))\r\n    }\r\n    }}\r\n\r\n\r\nexport default compose(\r\n        connect(mapStateToProps, mapDispatchToProps),\r\n        withAuthRedirect,\r\n    )\r\n    (Dialogs)","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '3eb442be-c6ec-48c8-96fc-69807a29300c'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`, )\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`, )\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Use profileAPI')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authorize() {\r\n        return instance.get('auth/me')\r\n    },\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users]\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users]\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n            case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n            case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return  (dispatch)=> {\r\n   dispatch(setFetching(true));\r\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(setFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    });\r\n}}\r\nexport const follow = (userId) => {\r\n  return  (dispatch)=> {\r\n      dispatch(setFollowingProgress(true, userId));\r\n      usersAPI.follow(userId)\r\n          .then(response => {\r\n              if (response.resultCode === 0) {\r\n                  dispatch(followSuccess(userId))\r\n              }\r\n              dispatch(setFollowingProgress(false, userId));\r\n          })\r\n}}\r\nexport const unfollow = (userId) => {\r\n  return  (dispatch)=> {\r\n      dispatch(setFollowingProgress(true, userId));\r\n      usersAPI.unfollow(userId)\r\n          .then(response => {\r\n              if (response.resultCode === 0) {\r\n                  dispatch(unfollowSuccess(userId))\r\n              }\r\n              dispatch(setFollowingProgress(false, userId));\r\n          })\r\n}}\r\n\r\nexport default usersReducer;","import React from 'react';\nimport styles from './users.module.css'\nimport userPict from '../../assets/images/images.png'\nimport {NavLink} from \"react-router-dom\";\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return <div>\n        <div>\n            {pages.map(page => {\n                return <span className={props.currentPage === page && styles.boldPage}\n                             onClick={() => {\n                                 props.onPageChanged(page)\n                             }}>{page}</span>\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n            <span>\n                <div> <NavLink to={'/profile/' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : userPict} className={styles.userFoto}/>\n                </NavLink>\n                </div>\n                <div>\n{u.followed\n    ? <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\n                props.unfollow(u.id)\n                }}>unfollow\n    </button>\n\n    : <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\n                props.follow(u.id)\n                }}>follow</button>}\n            </div>\n            </span>\n                <span>\n                <span>\n    <div>{u.name}</div>\n    <div>{u.status}</div>\n</span>\n            <span>\n                  <div>{'u.location.country'}</div>\n                    <div>{'u.location.city'}</div>\n                </span>\n                </span>\n            </div>)\n        }\n    </div>\n}\n\nexport default Users;","import React from 'react';\r\nimport loader from \"../../assets/load.gif\";\r\n\r\nconst Preloader = (props) => {\r\n  return <div>\r\n  <img src={loader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, setFollowingProgress,\n    setCurrentPage,\n    unfollow, getUsers\n} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n       this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    };\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n        <Users totalUsersCount={this.props.totalUsersCount}\n                      pageSize={this.props.pageSize}\n                      currentPage={this.props.currentPage}\n                      onPageChanged={this.onPageChanged}\n                      users={this.props.users}\n                      unfollow={this.props.unfollow}\n                      follow={this.props.follow}\n               setFollowingProgress={this.props.setFollowingProgress}\n               followingProgress={this.props.followingProgress}\n        />\n        </>\n        }}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingProgress: state.usersPage.followingProgress,\n    }};\n\nlet withUserRedirect = withAuthRedirect(UsersContainer);\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, setFollowingProgress, getUsers}),\n    withAuthRedirect,\n)\n(UsersContainer)\n\n\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activatedMode =()=> {\r\n        this.setState({ editMode: true });\r\n    }\r\n\r\n    deactivatedMode =()=> {\r\n        this.setState({ editMode: false });\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange =(e)=> {\r\n        this.setState({ status: e.currentTarget.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <div onDoubleClick={this.activatedMode}> {this.props.status} </div>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onBlur={this.deactivatedMode}\r\n                               value={this.state.status}\r\n                               onChange={this.onStatusChange}\r\n                        autoFocus={true}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport Profile from \"../Profile\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.content}>\r\n                <img\r\n                    src='https://cdn.pixabay.com/photo/2015/01/08/19/10/jetty-593401_960_720.jpg'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <ProfileStatus status={props.status}\r\n                               updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nlet ADD_POST = 'ADD-POST';\r\nlet UPDATE_POST_TEXT = 'UPDATE-POST-TEXT';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    myPost: [{id: 1, message: 'What is your name?', likesCount: 0},\r\n        {id: 2, message: 'My Name is Pawel', likesCount: 456368},\r\n        {id: 3, message: 'My Name is Sanek', likesCount: 34},\r\n        {id: 4, message: 'Very well', likesCount: 45}],\r\n    newPostText: 'samuray',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 44\r\n            };\r\n            return {...state,\r\n                myPost: [...state.myPost, newPost],\r\n                newPostText: \"\"};\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return  {...state,\r\n                newPostText: action.newText};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return  {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return  {...state, status: action.status};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updatePostTextActionCreator = (text) => ({type: UPDATE_POST_TEXT, newText: text});\r\nexport const getUserProfile =(userId)=> (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n    })\r\n}\r\n\r\nexport const getUserStatus =(userId)=> (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n                dispatch(setStatus(response.data));\r\n    })\r\n}\r\nexport const updateUserStatus =(status)=> (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n    })\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div  className={s.item}>\r\n             <img src='https://cdn.pixabay.com/photo/2016/09/22/16/38/avatar-1687700_960_720.jpg'/>\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount} like</span>\r\n              </div>\r\n                </div>              \r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.myPost.map((p) => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n    let newPostTexts = props.newPostText;\r\n\r\n    let addPost = () => {\r\n        props.onAddPost();\r\n    }\r\n\r\n    let onPostChange= (e)=> {\r\n        let text = e.target.value;\r\n        props.updatePostText(text);\r\n        // let action = {type: 'UPDATE-POST-TEXT', newText: text}\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n            <textarea onChange={onPostChange} value={newPostTexts}/>\r\n            <div>\r\n                <button onClick={addPost}>ADD post</button>\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updatePostTextActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        myPost: state.profilesPage.myPost,\r\n        newPostText: state.profilesPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        onAddPost: () => {dispatch(addPostActionCreator())},\r\n        updatePostText: (body) => {dispatch(updatePostTextActionCreator(body))}\r\n        }\r\n    }\r\n\r\nconst PostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default PostContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostContainer from \"./MyPosts/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <PostContainer\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n class ProfileContainer extends React.Component {\r\n\r\n     componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n         if (!userId) {userId = 2}\r\n         this.props.getUserProfile(userId)\r\n         this.props.getUserStatus(userId)\r\n     }\r\n\r\n     render() {\r\n\r\n         return (\r\n             <Profile {...this.props} profile={this.props.profile}\r\n                      status={this.props.status}\r\n                      updateUserStatus={this.props.updateUserStatus}\r\n             />\r\n             )\r\n     }\r\n }\r\n\r\n let mapStateToProps = (state)=> ({\r\n     profile: state.profilesPage.profile,\r\n     status: state.profilesPage.status,\r\n });\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)\r\n(ProfileContainer)","import {authAPI} from \"../api/api\";\r\nlet SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n                };\r\n        default:\r\n            return state;\r\n            }\r\n    }\r\n\r\nexport const setAuthUserData = (id, email, login) => ({type: SET_USER_DATA, data: {id, email, login}});\r\n\r\nexport const getAuthorize =()=> (dispatch)=> {\r\n     authAPI.authorize()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0 ) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login))\r\n                }\r\n            });\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthorize} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\nthis.props.getAuthorize();\r\n  }\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=> ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAuthorize}) (HeaderContainer);","import React from 'react';\nimport './App.css';\n\nconst Login = (props) => {\nreturn (\n    <h1>\n        LOGIN\n    </h1>\n        )\n};\n\nexport default Login\n\n","    import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login\";\n\nconst App = () => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n\n                <Route path='/dialogs'\n                       render={() => <DialogsContainer/>}/>\n\n                <Route path='/profile/:userId?'\n                       render={() => <ProfileContainer/>}/>\n\n                <Route path='/users'\n                       render={() => <UsersContainer/>}/>\n\n                <Route path='/login'\n                       render={() => <Login/>}/>\n            </div>\n        </div>\n\n    )\n};\n\nexport default App\n\n","\r\nlet initialState= {\r\n    speakers: [\r\n        {id: 1, nik: 'Dev'},\r\n        {id: 2, nik: 'Jun'},\r\n        {id: 3, nik: 'HR'},\r\n        {id: 4, nik: 'PM'}],\r\n        speaks: [\r\n        {id: 1, speaks: 'Very good'},\r\n        {id: 2, speaks: 'Good Idea'},\r\n        {id: 3, speaks: 'some Bitch'},\r\n        {id: 4, speaks: 'Real guy'}]\r\n}\r\n\r\nconst sidebarReducer = (state=initialState, action)=> {\r\n    return state;  }\r\n\r\n    export default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilesPage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n        </Provider>\n        </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}