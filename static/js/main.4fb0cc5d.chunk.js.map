{"version":3,"sources":["hoc/withAuthRedirect.jsx","api/api.js","Redux/dialogReducer.jsx","components/Users/users.module.css","assets/images/samurai.jpg","assets/load.gif","components/Navbar/Navbar.module.css","components/common/FormsControl/FormsControl.jsx","components/Navbar/Navbar.jsx","components/utilites/objectHelper.js","Redux/usersReducer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","Redux/usersSelectors.jsx","components/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/authReducer.jsx","components/Header/HeaderContainer.jsx","Login.jsx","Redux/appReducer.jsx","App.jsx","hoc/withLazySuspense.jsx","Redux/sidebarReducer.jsx","Redux/redux-store.jsx","index.jsx","components/common/preloader.jsx","components/common/FormsControl/FormsControl.module.css","components/utilites/validators/validators.jsx","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","Redux/profileReducer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","filePhoto","dataObject","FormData","append","saveProfile","profile","authAPI","authorize","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","initialState","myDia","id","name","myMess","message","addMessActionCreator","newMessages","type","dialogReducer","action","mess","module","exports","FormControl","input","meta","touched","error","children","child","hasError","className","s","formControl","InputArea","restProps","TextArea","buildField","placeholder","validators","component","text","validate","Navbar","useSelector","nav","item","activeClassName","active","updateObjectInArray","items","itemID","objPropName","newPropsObj","map","u","users","totalUsersCount","isFetching","followingProgress","followSuccess","unfollowSuccess","setCurrentPage","setFetching","setFollowingProgress","followUnfollowFunction","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","partSize","pagesCount","Math","ceil","pages","i","push","partCount","useState","partNumber","setPartNumber","leftPartPageNumber","rightPartPageNumber","pagination","onClick","p","page","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPict","styles","userFoto","alt","disabled","some","Users","getUsersSuperSelect","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowingProgress","UsersContainer","compose","bind","totalCount","Header","header","loginBlock","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getAuthorize","getCaptchaURL","captchaURL","url","authReducer","HeaderContainer","ReduxLoginForm","reduxForm","form","handleSubmit","onSubmit","requiredFields","style","formSumError","messages","length","stopSubmit","_error","formData","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promiseRejectionEvent","alert","initializeApp","window","addEventListener","removeEventListener","exact","path","render","Suspense","fallback","withRouter","app","dispatchResult","Promise","all","speakers","nik","speaks","sidebarReducer","reducers","combineReducers","profilesPage","profileReducer","dialogsPage","sideBar","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","Preloader","loader","value","maxLengthTC","maxLength","myPost","likesCount","newPostText","addPostActionCreator","postFormMess","setStatus","getUserProfile","getUserStatus","updateUserStatus","log","saveAvatar","file","getState","reject","newPost"],"mappings":"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","file":"static/js/main.4fb0cc5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect =(Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '3eb442be-c6ec-48c8-96fc-69807a29300c'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Use profileAPI');\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    },\r\n    savePhoto(filePhoto) {\r\n        let dataObject = new FormData(); // create new object\r\n        dataObject.append('image', filePhoto); // paste new file (avatar picture)\r\n        return instance.put('profile/photo', dataObject, {headers: {'Content-Type': 'multipart/form-data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authorize() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe= false, captcha = null) {\r\n        return instance.post('auth/login',\r\n            {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n};","let ADD_MESS = 'ADD-MESS';\r\n\r\nlet initialState = {\r\n    myDia: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Tanya'},\r\n        {id: 3, name: 'Pasha'},\r\n        {id: 4, name: 'Illya'}],\r\n    myMess: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Im Ok'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'OK'}],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            let mess = action.newMessages;\r\n            return {\r\n                ...state, myMess: [...state.myMess, {id: 5, message: mess}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessActionCreator = (newMessages) => ({type: ADD_MESS, newMessages});\r\n\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"users_userFoto__1UyBp\"};","module.exports = __webpack_public_path__ + \"static/media/samurai.a5d3422b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/load.26ef8bb4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13ZGC\",\"item\":\"Navbar_item__3oUgG\",\"active\":\"Navbar_active__1g11l\",\"friendsContainer\":\"Navbar_friendsContainer__2Rreh\",\"friend\":\"Navbar_friend__3-gGi\"};","import React from 'react';\r\nimport s from './FormsControl.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error: '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const InputArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const buildField = (placeholder, name, validators, component, props={}, text) => (\r\n<div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators} component={component} {...props}/> {text}\r\n</div>\r\n);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const {userId} = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={`/profile/${userId}`} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/users\">USERS</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h2>Friends</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemID, objPropName, newPropsObj)=> {\r\n\r\nreturn  items.map(u => {\r\n  if (u[objPropName] === itemID) {\r\n    return {...u, ...newPropsObj}\r\n  }\r\n  return u;\r\n})\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../components/utilites/objectHelper\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case 'FAKE':\r\n        //     return {...state, fake: state.fake + 1};\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                //     state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\nconst followUnfollowFunction = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFunction(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        // let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        // let actionCreator = unfollowSuccess;\r\n        followUnfollowFunction(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\nimport s from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, partSize = 10, ...props}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let partCount = Math.ceil(pagesCount / partSize);\n    let [partNumber, setPartNumber] = useState(1);\nlet leftPartPageNumber = (partNumber - 1)* partSize + 1;\nlet rightPartPageNumber = partNumber * partSize;\n\n    return <div className={s.pagination}>\n\n        {partNumber > 1 && <button onClick={()=> {setPartNumber(partNumber - 1)}}> PREV </button>}\n\n            {pages\n                .filter(p => p>= leftPartPageNumber && p<= rightPartPageNumber)\n                .map(page => {\n                return <span className={ cn ({\n                         [s.selectedPage]: currentPage === page\n                    }, s.pageNumber)}\n                          key={page}\n                          onClick={(e) => {\n                              onPageChanged(page)\n                          }}> {page} </span>\n            })}\n        {partCount > partNumber && <button onClick={()=> {setPartNumber(partNumber + 1)}}> NEXT </button>}\n        </div>\n};\n\nexport default Paginator;","import React from 'react';\nimport styles from './users.module.css'\nimport userPict from '../../assets/images/samurai.jpg'\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingProgress, follow, unfollow, ...props}) => {\n\n    return (\n        <div>\n            <span>\n                <div>\n                     <NavLink to={'/profile/' + user.id}>\n                    <img src={user.photos.small != null ? user.photos.small : userPict} className={styles.userFoto}\n                         alt={'unload'}/>\n                    </NavLink>\n                </div>\n                <div>\n{user.followed\n    ? <button disabled={followingProgress.some(id => id === user.id)}\n              onClick={() => {\n                  unfollow(user.id)\n              }}>\n        unfollow\n    </button>\n\n    : <button disabled={followingProgress.some(id => id === user.id)}\n              onClick={() => {\n                  follow(user.id)\n              }}>\n        follow\n    </button>}\n            </div>\n            </span>\n            <span>\n                <span>\n    <div>{user.name}</div>\n    <div>{user.status}</div>\n</span>\n            <span>\n                  {/*<div>{'user.location.country'}</div>*/}\n                {/*  <div>{'user.location.city'}</div>*/}\n                </span>\n                </span>\n        </div>)\n};\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n\n    return (<div>\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\n                   onPageChanged={onPageChanged} pageSize={pageSize}/>\n        {users.map(u => <User key={u.id} user={u}\n                              followingProgress={props.followingProgress}\n                              follow={props.follow}\n                              unfollow={props.unfollow}/>)\n        }\n    </div>)\n};\n\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getUsersSuperSelect = createSelector(getUsers,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n};\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 22;\r\n    return count;\r\n};","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {follow, getUsers, setCurrentPage, setFollowingProgress, unfollow} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFetching,\n    getFollowingProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSuperSelect\n} from \"../../Redux/usersSelectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        let {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize)\n    };\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   setFollowingProgress={this.props.setFollowingProgress}\n                   followingProgress={this.props.followingProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // users: getSelectUsers(state),\n        users: getUsersSuperSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingProgress: getFollowingProgress(state),\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, setFollowingProgress, getUsers\n    }),\n    withAuthRedirect,)(UsersContainer)\n\n\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from'./Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return <header className={s.header}>\r\n    <img src='https://static.techspot.com/images2/news/bigimage/2019/01/2019-01-14-image-6.jpg'\r\n    alt={'photos'}\r\n    />\r\n\r\n    <div className={s.loginBlock}>\r\n      {props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}> Log Out </button> </div>\r\n      :<NavLink to={'/login'}> LOGIN </NavLink>}\r\n    </div>\r\n\r\n</header>\r\n};\r\n\r\nexport default Header; ","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet SET_USER_DATA = 'Redux/authReducer/SET_USER_DATA';\r\nlet GET_CAPTCHA_URL_SUCCESS = 'Redux/authReducer/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthorize = () => async (dispatch) => {\r\n    let response = await authAPI.authorize();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        //success, get auth data\r\n        dispatch(getAuthorize())\r\n    } else { if (response.data.resultCode === 10){\r\ndispatch(getCaptchaURL())\r\n    }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptcha();\r\n    let captchaURL = response.data.url;\r\n\r\n   dispatch(getCaptchaUrlSuccess(captchaURL));\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout\r\n    })(HeaderContainer);","import React from 'react';\nimport './App.css';\nimport {reduxForm} from \"redux-form\";\nimport {buildField, InputArea} from \"./components/common/FormsControl/FormsControl\";\nimport {requiredFields} from \"./components/utilites/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./Redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./components/common/FormsControl/FormsControl.module.css\";\n\n\nconst LoginForm = ({error, handleSubmit, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {buildField('e-mail', 'email', [requiredFields], InputArea, {type: 'email'}, 'free@samuraijs.com')}\n            {buildField('Password', 'password', [requiredFields], InputArea, {type: 'password'}, 'free')}\n            {buildField(null, 'rememberMe', [], InputArea, {type: 'checkbox'}, 'rememberMe')}\n\n            {captchaUrl && <img src={captchaUrl} alt={'valid auth'}/>}\n            {captchaUrl &&  buildField('Symbols from Image', 'captcha', [requiredFields], InputArea, {})}\n\n            {error && <div className={style.formSumError}>\n                {error}\n            </div>}\n            <div>\n                <button> login </button>\n            </div>\n        </form>\n    )\n};\n\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captchaUrl)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h2> LOGIN </h2>\n        <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        captchaUrl: state.auth.captchaUrl\n    }\n};\n\nexport default connect(mapStateToProps, {login})(Login)\n\n","import {getAuthorize} from \"./authReducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    //promise\r\n   let dispatchResult = dispatch(getAuthorize());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>\r\n        dispatch(initializedSuccess()));\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\"\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/preloader\";\nimport {withLazySuspense} from \"./hoc/withLazySuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (reason, promiseRejectionEvent) => {\n        alert('Some Error!')\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/dialogs'\n                               render={withLazySuspense(DialogsContainer)}/>\n\n                        <Route path='/profile/:userId?'\n                               render={() => {\n                                   return <React.Suspense fallback={<Preloader/>}>\n                                       <ProfileContainer/>\n                                   </React.Suspense>\n                               }\n                               }/>\n\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path='/login'\n                               render={() => <Login/>}/>\n                        <Route exact path='*'\n                               render={() => <div>error 404, page not found</div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        initialized: state.app.initialized\n    }\n);\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);","import React from 'react';\r\nimport Preloader from \"../components/common/preloader\";\r\n\r\n\r\nexport const withLazySuspense =(Component)=> {\r\n   return (props) => {\r\n\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n   </React.Suspense>\r\n    }\r\n};\r\n\r\n","\r\nlet initialState= {\r\n    speakers: [\r\n        {id: 1, nik: 'Dev'},\r\n        {id: 2, nik: 'Jun'},\r\n        {id: 3, nik: 'HR'},\r\n        {id: 4, nik: 'PM'}],\r\n        speaks: [\r\n        {id: 1, speaks: 'Very good'},\r\n        {id: 2, speaks: 'Good Idea'},\r\n        {id: 3, speaks: 'some Bitch'},\r\n        {id: 4, speaks: 'Real guy'}]\r\n};\r\n\r\nconst sidebarReducer = (state=initialState)=> {\r\n    return state;  };\r\n\r\n    export default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet reducers = combineReducers({\r\n    profilesPage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/redux-store';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n// setInterval(() => {\n//     store.dispatch({type: 'FAKE'})\n// }, 3000);\n\n\nReactDOM.render(\n    <BrowserRouter\n        // basename={process.env.PUBLIC_URL}\n    >\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));","import React from 'react';\r\nimport loader from \"../../assets/load.gif\";\r\n\r\nconst Preloader = (props) => {\r\n  return <div>\r\n  <img src={loader} alt={'preload'}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__1H5nd\",\"formControl\":\"FormsControl_formControl__1lnyu\",\"error\":\"FormsControl_error__15huM\",\"formSumError\":\"FormsControl_formSumError__2iufC\"};","import React from 'react';\n\nexport const requiredFields = (value)=> {\n    if (value) {return undefined;\n    } else {return 'Field is required'}\n};\n\n\nexport const maxLengthTC = (maxLength)=> (value)=> {\n     if (value.length > maxLength) {return `max length is ${maxLength} sign`;\n    } else {return undefined}\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__H94ho\",\"pageNumber\":\"Paginator_pageNumber__24ay8\",\"selectedPage\":\"Paginator_selectedPage__IQGw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Gah8\",\"loginBlock\":\"Header_loginBlock__2dYpU\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet ADD_POST = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\nlet SET_USER_AVATAR = 'SET_USER_AVATAR';\r\n\r\nlet initialState = {\r\n    myPost: [{id: 1, message: 'What is your name?', likesCount: 0},\r\n        {id: 2, message: 'My Name is Pawel', likesCount: 456368},\r\n        {id: 3, message: 'My Name is Sanek', likesCount: 34},\r\n        {id: 4, message: 'Very well', likesCount: 45}],\r\n    newPostText: 'samuray',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postFormMess,\r\n                likesCount: 44\r\n            };\r\n            return {\r\n                ...state,\r\n                myPost: [...state.myPost, newPost],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case SET_USER_AVATAR: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (postFormMess) => ({type: ADD_POST, postFormMess});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updatePhotoSuccess = (photos) => ({type: SET_USER_AVATAR, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    try {let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }}\r\n    catch (e) {\r\n        console.log('error: ' + e)\r\n    }\r\n};\r\nexport const saveAvatar = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(response.data.data.photos))\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    let userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}