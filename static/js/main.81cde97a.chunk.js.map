{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/users.module.css","assets/images/images.png","assets/load.gif","components/Profile/MyPosts/Posts/Post.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","Redux/dialogReducer.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/common/FormsControl/FormsControl.jsx","components/utilites/validators/validators.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","components/utilites/objectHelper.js","Redux/usersReducer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/preloader.jsx","Redux/usersSelectors.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profileReducer.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/authReducer.jsx","components/Header/HeaderContainer.jsx","Login.jsx","Redux/appReducer.jsx","App.jsx","Redux/sidebarReducer.jsx","Redux/redux-store.jsx","index.jsx","components/common/FormsControl/FormsControl.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","userId","useSelector","state","auth","className","s","nav","item","to","activeClassName","active","initialState","myDia","id","name","myMess","message","dialogReducer","action","type","mess","newMessages","Message","props","dialog","DialogItem","path","alt","src","FormControl","input","meta","touched","error","children","child","hasError","formControl","InputArea","restProps","TextArea","buildField","placeholder","validators","component","text","Field","validate","requiredFields","value","maxLengthTC","maxLength","length","maxLength20","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","map","d","key","messagesElements","m","isAuth","dialogs","dialogsItems","messages","e","addMess","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","addMessActionCreator","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","delete","follow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemID","objPropName","newPropsObj","u","users","totalUsersCount","isFetching","followingProgress","followSuccess","unfollowSuccess","setCurrentPage","setFetching","setFollowingProgress","followUnfollowFunction","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","filter","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","page","index","boldPage","onClick","User","user","photos","small","userPict","styles","userFoto","disabled","some","Users","Preloader","loader","getUsersSuperSelect","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowingProgress","UsersContainer","pageNumber","bind","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","onChange","currentTarget","autoFocus","ProfileInfo","profile","content","descriptionBlock","large","myPost","likesCount","newPostText","profileReducer","newPost","postFormMess","Post","maxLength10","ReduxPostForm","MyPosts","memo","log","postsElements","p","postsBlock","onAddPost","posts","profilesPage","addPostActionCreator","Profile","PostContainer","ProfileContainer","match","params","authUserId","history","getUserProfile","getUserStatus","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthorize","authReducer","HeaderContainer","ReduxLoginForm","style","formSumError","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","dispatchResult","Promise","all","speakers","nik","speaks","sidebarReducer","reducers","combineReducers","sideBar","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.81cde97a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boldPage\":\"Paginator_boldPage__2GvOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFoto\":\"users_userFoto__1UyBp\"};","module.exports = __webpack_public_path__ + \"static/media/images.06ece216.png\";","module.exports = __webpack_public_path__ + \"static/media/load.26ef8bb4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yagv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1YyKp\",\"dialogsItems\":\"Dialogs_dialogsItems__1Yf3L\",\"active\":\"Dialogs_active__gq_Rd\",\"messages\":\"Dialogs_messages__1We-l\",\"item\":\"Dialogs_item__3EO79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13ZGC\",\"item\":\"Navbar_item__3oUgG\",\"active\":\"Navbar_active__1g11l\",\"friendsContainer\":\"Navbar_friendsContainer__2Rreh\",\"friend\":\"Navbar_friend__3-gGi\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const {userId} = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={`/profile/${userId}`} activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/users\">USERS</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h2>Friends</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navbar;","let ADD_MESS = 'ADD-MESS';\r\n\r\nlet initialState = {\r\n    myDia: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Tanya'},\r\n        {id: 3, name: 'Pasha'},\r\n        {id: 4, name: 'Illya'}],\r\n    myMess: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Im Ok'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'OK'}],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            let mess = action.newMessages;\r\n            return {\r\n                ...state, myMess: [...state.myMess, {id: 5, message: mess}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessActionCreator = (newMessages) => ({type: ADD_MESS, newMessages});\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.active + ' ' + s.item}>\r\n            <img alt={'simple icon'}\r\n                src='https://avatars.githubusercontent.com/u/53193249?s=100'/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './FormsControl.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error: '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const InputArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const buildField = (placeholder, name, validators, component, props={}, text) => (\r\n<div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators} component={component} {...props}/> {text}\r\n</div>\r\n);","import React from 'react';\n\nexport const requiredFields = (value)=> {\n    if (value) {return undefined;\n    } else {return 'Field is required'}\n};\n\n\nexport const maxLengthTC = (maxLength)=> (value)=> {\n     if (value.length > maxLength) {return `max length is ${maxLength} sign`;\n    } else {return undefined}\n};","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthTC, requiredFields} from \"../utilites/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.myDia.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.myMess.map((m) => <Message message={m.message} key={m.id}/>);\r\n\r\n    let onAddMess = (e) => {\r\n       // alert(e.newMessages);\r\n        props.addMess(e.newMessages);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItems} ${s.active}`}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <ReduxDialogsForm onSubmit={onAddMess}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet maxLength20 =maxLengthTC(20);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder='your message'\r\n                   name={'newMessages'}\r\n                   component={TextArea}\r\n                   validate={[requiredFields, maxLength20]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>add mess</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ReduxDialogsForm =reduxForm({form: 'reduxDialogsForm'})(DialogsForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect =(Component)=> {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import React from 'react';\r\nimport {addMessActionCreator} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMess: (newMessages) => {\r\n            dispatch(addMessActionCreator(newMessages))\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,)(Dialogs)","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '3eb442be-c6ec-48c8-96fc-69807a29300c'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`,)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Use profileAPI');\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authorize() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post('auth/login',\r\n            {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    },\r\n};\r\n","\r\nexport const updateObjectInArray = (items, itemID, objPropName, newPropsObj)=> {\r\n\r\nreturn  items.map(u => {\r\n  if (u[objPropName] === itemID) {\r\n    return {...u, ...newPropsObj}\r\n  }\r\n  return u;\r\n})\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../components/utilites/objectHelper\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nlet TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case 'FAKE':\r\n        //     return {...state, fake: state.fake + 1};\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                //     state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(setFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\nconst followUnfollowFunction = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(setFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFunction(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        // let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        // let actionCreator = unfollowSuccess;\r\n        followUnfollowFunction(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React from 'react';\nimport s from \"./Paginator.module.css\";\n\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return <div>\n            {pages.map(page => {\n                return (\n                    <span key={page.index} className={currentPage === page && s.boldPage}\n                          onClick={() => {\n                              onPageChanged(page)\n                          }}>{page}\n                    </span>\n                )\n            })}\n        </div>\n};\n\nexport default Paginator;","import React from 'react';\nimport styles from './users.module.css'\nimport userPict from '../../assets/images/images.png'\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingProgress, follow, unfollow, ...props}) => {\n\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                    <img src={user.photos.small != null ? user.photos.small : userPict} className={styles.userFoto}\n                         alt={'unload'}/>\n                    </NavLink>\n                </div>\n                <div>\n{user.followed\n    ? <button disabled={followingProgress.some(id => id === user.id)}\n              onClick={() => {\n                  unfollow(user.id)\n              }}>\n        unfollow\n    </button>\n\n    : <button disabled={followingProgress.some(id => id === user.id)}\n              onClick={() => {\n                  follow(user.id)\n              }}>\n        follow\n    </button>}\n            </div>\n            </span>\n            <span>\n                <span>\n    <div>{user.name}</div>\n    <div>{user.status}</div>\n</span>\n            <span>\n                  {/*<div>{'user.location.country'}</div>*/}\n                {/*  <div>{'user.location.city'}</div>*/}\n                </span>\n                </span>\n        </div>)\n};\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n\n    return (<div>\n        <Paginator currentPage={currentPage} totalUsersCount={totalUsersCount}\n                   onPageChanged={onPageChanged} pageSize={pageSize}/>\n        {users.map(u => <User key={u.id} user={u}\n                              followingProgress={props.followingProgress}\n                              follow={props.follow}\n                              unfollow={props.unfollow}/>)\n        }\n    </div>)\n};\n\n\nexport default Users;","import React from 'react';\r\nimport loader from \"../../assets/load.gif\";\r\n\r\nconst Preloader = (props) => {\r\n  return <div>\r\n  <img src={loader} alt={'preload'}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getUsersSuperSelect = createSelector(getUsers,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n};\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 22;\r\n    return count;\r\n};","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {follow, getUsers, setCurrentPage, setFollowingProgress, unfollow} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFetching,\n    getFollowingProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSuperSelect\n} from \"../../Redux/usersSelectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        let {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize)\n    };\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   setFollowingProgress={this.props.setFollowingProgress}\n                   followingProgress={this.props.followingProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // users: getSelectUsers(state),\n        users: getUsersSuperSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingProgress: getFollowingProgress(state),\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, setFollowingProgress, getUsers\n    }),\n    withAuthRedirect,)(UsersContainer)\n\n\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivatedMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activatedMode}> {props.status || 'glad to see you'} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onBlur={deactivatedMode}\r\n                    value={status}\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.content}>\r\n                <img\r\n                    src='https://cdn.pixabay.com/photo/2015/01/08/19/10/jetty-593401_960_720.jpg' alt={'no_image'}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"no pict\"/>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nlet ADD_POST = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    myPost: [{id: 1, message: 'What is your name?', likesCount: 0},\r\n        {id: 2, message: 'My Name is Pawel', likesCount: 456368},\r\n        {id: 3, message: 'My Name is Sanek', likesCount: 34},\r\n        {id: 4, message: 'Very well', likesCount: 45}],\r\n    newPostText: 'samuray',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postFormMess,\r\n                likesCount: 44\r\n            };\r\n            return {\r\n                ...state,\r\n                myPost: [...state.myPost, newPost],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (postFormMess) => ({type: ADD_POST, postFormMess});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div  className={s.item}>\r\n             <img src='https://cdn.pixabay.com/photo/2016/09/22/16/38/avatar-1687700_960_720.jpg' alt={'avatar'}/>\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount} like</span>\r\n              </div>\r\n                </div>              \r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthTC, requiredFields} from \"../../utilites/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst maxLength10 = maxLengthTC(10);\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'add post'} name={'postFormMess'}\r\n                   component={TextArea}\r\n                   validate={[requiredFields, maxLength10]}\r\n            />\r\n            <div>\r\n                <button> ADD post</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n};\r\nconst ReduxPostForm = reduxForm({form: 'reduxPostForm'})(PostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // checks extra renders\r\n\r\n    // componentDidMount() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({a:12})\r\n    //     }, 1000);\r\n    // }\r\n\r\n//use 1 PureComponent instead of React.Component // class Component\r\n//use 2 shouldComponentUpdate = React.Component // class Component\r\n//use 2 React.Memo with functional Component //\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // }\r\n\r\n    console.log('RENDER');\r\n    console.log(props);\r\n    let postsElements = props.myPost.map((p) => <Post message={p.message} key={p.id}\r\n                                                      likesCount={p.likesCount}/>);\r\n    let addPost = (e) => {\r\n        props.onAddPost(e.postFormMess);\r\n    };\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n            <ReduxPostForm onSubmit={addPost}/>\r\n            {/*<textarea onChange={onPostChange} value={newPostTexts}/>*/}\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPost: state.profilesPage.myPost,\r\n        newPostText: state.profilesPage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (postFormMess) => {\r\n            dispatch(addPostActionCreator(postFormMess))\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostContainer from \"./MyPosts/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <PostContainer\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilesPage.profile,\r\n    status: state.profilesPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer)","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from'./Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return <header className={s.header}>\r\n    <img src='https://static.techspot.com/images2/news/bigimage/2019/01/2019-01-14-image-6.jpg'\r\n    alt={'photos'}\r\n    />\r\n\r\n    <div className={s.loginBlock}>\r\n      {props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}> Log Out </button> </div>\r\n      :<NavLink to={'/login'}> LOGIN </NavLink>}\r\n    </div>\r\n\r\n</header>\r\n};\r\n\r\nexport default Header; ","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet SET_USER_DATA = 'Redux/authReducer/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthorize = () => async (dispatch) => {\r\n    let response = await authAPI.authorize();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthorize())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout\r\n    })(HeaderContainer);","import React from 'react';\nimport './App.css';\nimport {reduxForm} from \"redux-form\";\nimport {buildField, InputArea} from \"./components/common/FormsControl/FormsControl\";\nimport {requiredFields} from \"./components/utilites/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./Redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./components/common/FormsControl/FormsControl.module.css\";\n\n\nconst LoginForm = ({error, handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {buildField('e-mail', 'email', [requiredFields], InputArea, {type: 'email'}, 'free@samuraijs.com')}\n            {buildField('Password', 'password', [requiredFields], InputArea, {type: 'password'}, 'free')}\n            {buildField(null, 'rememberMe', [requiredFields], InputArea, {type: 'checkbox'}, 'rememberMe')}\n\n            {error && <div className={style.formSumError}>\n                {error}\n            </div>}\n            <div>\n                <button> login</button>\n            </div>\n        </form>\n    )\n};\n\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe,)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h2> LOGIN </h2>\n        <ReduxLoginForm onSubmit={onSubmit}/>\n    </div>\n};\n\nlet mapStateToProps = (state) => {\n    return {isAuth: state.auth.isAuth}\n};\n\nexport default connect(mapStateToProps, {login})(Login)\n\n","import {getAuthorize} from \"./authReducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    //promise\r\n   let dispatchResult = dispatch(getAuthorize());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>\r\n        dispatch(initializedSuccess()));\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        initialized: state.app.initialized\n    }\n);\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);","\r\nlet initialState= {\r\n    speakers: [\r\n        {id: 1, nik: 'Dev'},\r\n        {id: 2, nik: 'Jun'},\r\n        {id: 3, nik: 'HR'},\r\n        {id: 4, nik: 'PM'}],\r\n        speaks: [\r\n        {id: 1, speaks: 'Very good'},\r\n        {id: 2, speaks: 'Good Idea'},\r\n        {id: 3, speaks: 'some Bitch'},\r\n        {id: 4, speaks: 'Real guy'}]\r\n};\r\n\r\nconst sidebarReducer = (state=initialState)=> {\r\n    return state;  };\r\n\r\n    export default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet reducers = combineReducers({\r\n    profilesPage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n// setInterval(() => {\n//     store.dispatch({type: 'FAKE'})\n// }, 3000);\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__1H5nd\",\"formControl\":\"FormsControl_formControl__1lnyu\",\"error\":\"FormsControl_error__15huM\",\"formSumError\":\"FormsControl_formSumError__2iufC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2B-5Z\",\"content\":\"ProfileInfo_content__3SdjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1l0Dt\",\"posts\":\"MyPosts_posts__2J8SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Gah8\",\"loginBlock\":\"Header_loginBlock__2dYpU\"};"],"sourceRoot":""}